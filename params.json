{
  "name": "Lj-projectbuilder",
  "tagline": "Build a project using lirejarp example",
  "body": "![screenshot project builder](https://wp.starwit.de/wp-content/uploads/2016/10/projectbuilder.png)\r\n\r\n## Motivation\r\nCreating modern software always requires a number of things to do. One of these things is to persist data and to access persisted data. Finally the data should be presented in a userfriendly manner.\r\n\r\nYet still a lot of boiler plate code needs to be written and creating JEE application quickly remains a challenge. Therefore approach described in this article shall provide a guide in how to setup an architecture implementing persistence and a RESTful interface layer. To do that properly a (reusable) pattern of inheritance + generic data types is proposed. This (yet unnamed) pattern is applied in persistence, Enterprise Java Beans and in RESTful web service implementation and therefore proved to be quite flexible.\r\n\r\nA fully working example application of this pattern can be found is the [lirejarp template](https://github.com/witchpou/lirejarp). Besides using described pattern it also contains an Javascript based client application that serves a UI to the Java based back end. This rigorous separation of UI is also intended as it helps to demonstrate architecture approach without mixing with UI issues.\r\n\r\nThis is a tool that helps you create a new project based on the [lirejarp template](https://github.com/witchpou/lirejarp). Setup of a new project consists of two things: renaming all elements according to your project needs (files, packages, war-file) and creating base functionality for new domain objects. So project builder is a tool that collects in a GUI some data for your new project. Once you provided a new project name and your desired domain objects, your check out copy of LireJarp is modified and enhanced accordingly. \r\n\r\n## Prequisites\r\n\r\nTo start the software, the following stuff have to be installed:\r\n\r\n* Java 8 JDK or higher\r\n* Maven 3.0.5 or higher\r\n* ant 1.9.3 or higher\r\n\r\n## Start Project Builder\r\n\r\nYou can build and start the Project Builder in only three steps:\r\n\r\n1. Clone [Lirejarp Project Builder](https://github.com/witchpou/lj-projectbuilder) with git clone https://github.com/witchpou/lj-projectbuilder\r\n2. go to directory lj-projectbuilder/ljprojectbuilder and open command line\r\n3. execute `ant setup_project` on commandline\r\n\r\nHence, Project Builder can be reached under http://localhost:8081/ljprojectbuilder/.\"\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}